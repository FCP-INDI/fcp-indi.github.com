*****
Nodes
*****

.. _mem_gb:

.. _n_procs:

.. _n_cpus:

.. warning::
   A Nipype :py:class:`~nipype.pipeline.engine.nodes.Node` has an initialization parameter ``mem_gb`` that differs from the :doc:`commandline option </user/run/help>` ``--mem_gb``. While the commandline option is a limit, the Node initialization parameter is an estimate of the most memory that Node will consume when run. The Node parameter is not a limit; rather, this value is used to allocate system resources at runtime.
   
   Likewise, the commandline option ``--n_cpus`` is a limit and the Node initialization parameter ``n_procs`` is an estimate of the greatest number of threads a Node will consume.
   
   C-PAC automatically creates a JSON-like file called ``callback.log`` (via the function :py:func:`~CPAC.utils.monitoring.log_nodes_cb`) when running. This file includes for each Node:

      * estimated memory,
      * memory usage observed at runtime,
      * estimated number of threads, and
      * threads used at runtime.
   
   The Nipype utility function :py:func:`~nipype.utils.draw_gantt_chart.log_to_dict` reads a log file generated by ``log_nodes_cb`` to a Python dictionary. 
   
   When a developer creates or modifies a Node in C-PAC, a ``mem_gb`` and ``n_procs`` argument should be provided unless the respective defaults of 0.2 and 1 are expected to be sufficient. When testing, the ``mem_gb`` and ``n_procs`` arguments should be adjusted if the observed memory and/or thread usage of a Node exceeds the estimate.
 

.. autoclass:: CPAC.pipeline.Node
   :special-members: __init__

.. autofunction:: CPAC.utils.monitoring.log_nodes_cb

.. autofunction:: nipype.utils.draw_gantt_chart.log_to_dict
