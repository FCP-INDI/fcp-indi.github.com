.. C-PAC documentation master file, created by
   sphinx-quickstart on Fri Jul 20 16:32:55 2012.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Welcome to C-PAC's Documentation!
=================================

Latest Release: C-PAC v1.4.0 (February 4, 2019)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**EASE OF USE**

* **Quick Start Guide.** By pulling our Docker or Singularity container, you can kick off C-PAC with your dataset in minutes, without any prior package or library installations other than Docker or Singularity. More info available on our :doc:`User Guide </quick>`.

**NEW FEATURES**

* **TURNKEY MODE.** For users who prefer not to make decisions regarding their pipeline, C-PAC now includes a pre-configured default pipeline that includes the most commonly used decisions. The pre-configured pipeline selections are described in the :doc:`Quick-start guide </quick>` under "Running Turnkey Mode".

* **Nonparametric Permutation Inference.** FMRIB's FSL Randomise has been integrated into C-PAC's suite of group-level analyses. You can use the already-existing FSL group-level presets or the group model builder to specify your model.

**IMPROVEMENTS**

* **Group Model-Building Modularity.** As part of an ongoing process of improving usability, C-PAC's group-level analysis model builder now offers more control over your model design. It is now easier to review changes to your design matrix before specifying contrasts.

* **Early Access to the new C-PAC GUI.** The first part of C-PAC's new graphical user interface (GUI) for generating and editing custom pipelines is available! All are encouraged to take a quick test-drive of the pipeline builder and let us know your thoughts. All feedback welcome on our `forum <https://groups.google.com/forum/#!forum/cpax_forum>`_.

**ERROR FIXES**

* An error preventing users from running only anatomical preprocessing has been fixed.

* An error in the Unpaired Two-Group Difference preset of the FSL Group Model Presets, which was causing certain covariate labels to occasionally be formatted improperly, has been fixed.

**COMING SOON (Release 1.5 early 2019)**

* More denoising options
* Quasi-periodic pattern (QPP) identification
* New Graphical User Interface (GUI) Upgrade
* Further modularity & usability improvements

**In addition,** the :doc:`C-PAC Docker image and AWS AMI</running>` have both been updated. These provide a quick way to get started without needing to go through the install process.

**And as always, you can contact us here for user support and discussion:**

`https://groups.google.com/forum/#!forum/cpax_forum <https://groups.google.com/forum/#!forum/cpax_forum>`_


The C-PAC Mission
^^^^^^^^^^^^^^^^^

Once a distant goal, discovery science for the human connectome is now a reality. Researchers who previously struggled to obtain neuroimaging data from 20-30 participants are now exploring the functional connectome using data acquired from thousands of participants, made publicly available through the `1000 Functional Connectomes Project and the International Neuroimaging Data-sharing Initiative (INDI) <http://fcon_1000.projects.nitrc.org/>`_. However, in addition to access to data, scientists need access to tools that will facilitate data exploration. Such tools are particularly important for those who are inexperienced with the nuances of fMRI image analysis, or those who lack the programming support necessary for handling and analyzing large-scale datasets.

The Configurable Pipeline for the Analysis of Connectomes (C-PAC) is a configurable, open-source, Nipype-based, automated processing pipeline for resting state functional MRI (R-fMRI) data, for use by both novice and expert users. C-PAC was designed to bring the power, flexibility and elegance of the `Nipype platform <http://nipy.sourceforge.net/nipype/>`_ to users in a plug and play fashionâ€”without requiring the ability to program. Using an easy to read, text-editable configuration file or a graphical user interface, C-PAC users can rapidly orchestrate automated R-fMRI processing procedures, including: 

* standard quality assurance measurements
* standard image preprocessing based upon user specified preferences
* generation of functional connectivity maps (e.g., :doc:`seed-based correlation analyses </sca>`)
* customizable extraction of time-series data
* generation of graphical representations of the connectomes at various scales (e.g., voxel, parcellation unit)
* generation of local R-fMRI measures (e.g., :doc:`regional homogeneity </reho>`, :doc:`voxel-matched homotopic connectivity </vmhc>`, :doc:`frequency amplitude measures </alff>`)

Importantly, C-PAC makes it possible to use a single configuration file to launch a factorial number of pipelines differing with respect to specific processing steps (e.g., spatial/temporal filter settings, global correction strategies, motion correction strategies, group analysis models). Additional noteworthy features include the ability to easily:

* customize C-PAC to handle any systematic directory organization
* specify Nipype distributed processing settings

C-PAC maintains key Nipype strengths, including the ability to:

* interface with different software packages (e.g., FSL, AFNI, ANTS)
* protect against redundant computation and/or storage
* automatically carry out input checking, bug tracking and reporting

Future updates will include more configurability, advanced analytic features (e.g., support vector machines, cluster analysis) and diffusion tensor imaging (DTI) capabilities.

For more information and additional tutorials, check out our `YouTube channel <https://www.youtube.com/channel/UCMhbaa3bF7oQgnAWX6HmyMQ>`_, as well as slides from our previous presentations:

* `CPAC Connectome Analysis in the Cloud <http://www.slideshare.net/CameronCraddock/cpac-connectome-analysis-in-the-cloud>`_
* `Open science resources for 'Big Data' Analyses of the human connectome <http://www.slideshare.net/CameronCraddock/open-science-resources-for-big-data-analyses-of-the-human-connectome>`_
* `Computational approaches for mapping the human connectome <http://www.slideshare.net/CameronCraddock/computational-approaches-for-mapping-the-human-connectome>`_

The C-PAC Team
^^^^^^^^^^^^^^
.. line-block::

   **Primary Development Team:**
   Michael Milham (Founder, Co-Principal Investigator)
   Cameron Craddock (Co-Principal Investigator)
   Steven Giavasis (Lead Developer)
   Nanditha Rajamani (Developer)
   Anibal Solon Heinsfeld (Developer)

   **Project Alumni:**
   Alison Walensky
   David O'Connor
   Carol Froehlich
   John Pellman
   Amalia MacDonald
   Daniel Clark
   Rosalia Tungaraza
   Daniel Lurie
   Zarrar Shehzad
   Krishna Somandepali
   Aimi Watanabe
   Qingyang Li
   Ranjit Khanuja
   Sharad Sikka
   Brian Cheung
 
   **Other Contributors:**
   Ivan J. Roijals-Miras (Google Summer of Code)
   Florian Gesser (Google Summer of Code)
   Asier Erramuzpe (Google Summer of Code)
   Chao-Gan Yan
   Joshua Vogelstein
   Adriana Di Martino
   F. Xavier Castellanos
   Sebastian Urchs
   Bharat Biswal

Funding Acknowledgements
^^^^^^^^^^^^^^^^^^^^^^^^
Primary support for the work by Michael P. Milham, Cameron Craddock and the INDI team was provided by gifts from Joseph P. Healey and the `Stavros Niarchos Foundation <http://www.snf.org/>`_ to the `Child Mind Institute <http://www.childmind.org/>`_, as well as by `NIMH <http://www.nimh.nih.gov/index.shtml>`_ awards to Dr. Milham (R03MH096321) and F.X. Castellanos (R01MH083246).

User Guide Index
----------------

.. toctree::
   :maxdepth: 2

   1. C-PAC Quickstart <quick>
   2. Install C-PAC <install>
   3. Specify Your Data <subject_list_config>
   4. Select Your Pipeline <pipeline_config>
   5. Run C-PAC <running>
   6. Pre-Process Your Data <preprocessing>
   7. Compute Derivatives <derivatives>
   8. Run C-PAC <running>
   9. Run Group Analysis <group_analysis>
   10. Check Your Outputs <output_dir>
   11. Troubleshoot <help>
   12. Release Notes <rnotes>
