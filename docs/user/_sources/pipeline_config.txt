Setting Up A Pipeline Configuration
====================================
Overview
--------

There are two ways of setting up a pipeline configuration for C-PAC:

* Using a text editor (useful for remote servers where using the GUI is not possible or impractical)
* Using the pipeline configuration interface in the GUI

Definitions
'''''''''''
* Workflow - A workflow accomplishes a particular processing task (e.g. functional preprocessing, scrubbing, nuisance correction). Each workflow can be turned on or off in the pipeline configuration.  Sometimes a workflow can be set to both on and off, allowing for pipelines to branch.
* Pipeline - A pipeline is a combination of workflows.
* Strategy -  A strategy is a set of preprocessing options. Specifically, a strategy is defined by segmentation thresholds, nuisance corrections, and scrubbing settings. Strategies can branch depending on which of these workflows are turned on or off and how they are configured.  Their names are constructed by concatenating the following parameters:
    * Number of principle components calculated by CompCor (if enabled)
    * Nuisance corrections selected.
    * CSF, Gray Matter, and White Matter segmentation thresholds.
    * Scrubbing threshold (if enabled)
For instance, :file:`_compcor_ncomponents_5_linear1.motion1.compcor1.CSF_0.98_GM_0.7_SCRUB_0.2_WM_0.98` is a strategy with 5 principle components for compcor, linear drift, motion, and compcor corrections applied, a CSF threshold of 0.98, a gray matter threshold of 0.7, a white matter treshold of 0.98, and a scrubbing threshold of 0.2 mm.

* Derivative - Derivatives are the results of processing a participant's raw data at the individual-level (i.e., connectivity measures).

Using a Text Editor
-------------------
Pipeline configuration files, like the data configuration file discussed in the `subject list builder section <subject_list_config>`_, are also stored as YAML files.  Similarly, each of the parameters used by C-PAC to assemble your pipeline can be specified as key-value pairs, so a pipeline configuration YAML would have multiple lines of the form::

    key : value

An example of a pipeline configuration YAML file can be found `here <https://raw.githubusercontent.com/FCP-INDI/C-PAC/master/configs/pipeline_config.yml>`_.  Tables explaining the keys and their potential values can be found on the individual pages for each of the outputs C-PAC is capable of producing.  All pipeline configuration files should have the keys in the Output Settings,Preprocessing Workflow options, and derivatives settings tables defined (see below for links to the documents where these tables are contained).

Why a list?
'''''''''''
You may notice as you learn about the settings for various outputs that many of the values for C-PAC's configurable settings are stored in lists (i.e., multiple values are separated by commas and surrounded by square brackets).  Such lists containing 1s and 0s (for 'True' and 'False' respectively) allow you to toggle on multiple options at the same time, and branch a pipeline into two different analysis strategies. See the `developer documentation <http://fcp-indi.github.io/docs/developer/workflows/cpac_pipeline.html>`_ for more information about how lists are used in C-PAC.
    
Using the GUI
-------------
Opening the GUI 
''''''''''''''''
To open the CPAC GUI, simply enter the command ``cpac_gui`` in a terminal window.  Then, on the main screen click on *New* next to *Pipelines*.  For each of the settings in the lefthand pane, refer to the pages linked to below in the *Configurable Settings* section.
**Note: You may receive an error about a 'known incorrect sRGB profile' if you are running the GUI within Anaconda/Miniconda on some machines.  This will not affect C-PAC performance and can be ignored.**

When you have finished configuring your pipeline, click *Save*. You will be asked to specify a location to save a configuration file containing information about the pipeline, and to specify a name for the pipeline.

To modify an existing pipeline, select it and click *Edit*. To use a previously configured pipeline, click *Load* and select the appropriate ``.yml`` configuration file. If you have loaded multiple pipelines, use the checkboxes to select which pipelines you would like to run. 

Configurable Settings
---------------------

Data Management and Environment Settings
'''''''''''''''''''''''''''''''''''''''''
.. toctree::
    :maxdepth: 1

    Computer Settings <compute_config>
    Output Settings <output_config>
    Preprocessing Workflow Options <preprocwf_config>
    Derivatives Settings <deriv_config>

Preprocessing 
'''''''''''''''
.. toctree::
    :maxdepth: 1

    Anatomical Preprocessing <anat>
    Functional Preprocessing <func>
    Slice Timing Correction <slice>
    Nuisance Corrections <nuisance>
    Temporal Filtering <nuisance>
    Motion Correction <motion>
    Time Series Extraction <tse>
    Smoothing <smoothing>

Derivatives
'''''''''''

* :doc:`Seed-based Correlation Analysis (SCA) </sca>` - Analyze the connectivity between brain regions.
* :doc:`Dual Regression </dual_reg>` - Compare large-scale networks.
* :doc:`Voxel-mirrored Homotopic Connectivity (VMHC) </vmhc>` - Investigate connectivity between hemispheres.
* :doc:`Amplitude of Low Frequency Fluctuations (ALFF) and fractional ALFF (fALFF) </alff>` - Measure the power of slow fluctuations in brain activity.
* :doc:`Regional Homogeneity (ReHo) </reho>` - Measure the similarity of activity patterns across neighboring voxels.
* :doc:`Network Centrality </centrality>` - Analyze the structure of functional networks.

Running Preprocessing and Individual-Level Analysis
---------------------------------------------------
When you are ready to run C-PAC, select the subject lists and pipelines you would like to run and click the *Run Individual Level Analysis* button.

The following schematic illustrates the order in which C-PAC executes.

.. figure:: /_images/processing_workflow.png


Output Structure
^^^^^^^^^^^^^^^^

Symbolic Links
""""""""""""""
C-PAC gives you the option of creating an output directory containing `symbolic links <http://en.wikipedia.org/wiki/Symbolic_link>`_ to processed files. We strongly recommend this setting be enabled, as it makes it much easier to navigate output files. The following schematic shows the structure of the resulting :file:`sym_links` directory:

.. figure:: /_images/symlink_structure.png

Pipeline and strategy folders are named as described above. 

File Descriptions
"""""""""""""""""
Preprocessed anatomical data from the Anatomical Preprocessing, Registration, and Segmentation workflows can be found in :file:`../scan/anat/` directory for each subject. The following diagram shows processing steps and standard output files for these workflows.

.. figure:: /_images/anat_prepro_schematic.png

Preprocessed functional data from the Functional Preprocessing workflow can be found in the :file:`../scan_<name>/func` directory for each subject. The following diagram shows processing steps and standard output files for this workflow.

.. figure:: /_images/functional_preprocessing.png

Derivative Outputs
""""""""""""""""""
Derivatives for each subject can be found in the :file:`../scan_<name>` directory of each subject. This folder also contains the outputs of the registration and segmentation workflows.

.. figure:: /_images/derivs_outputs.png

Within each derivative folder will be sub-folders for each set of frequency filters set in :file:`config.yml`, as well as a folder containing smoothed outputs.

Derivatives are output in both native space (:file:`*_img.nii.gz` and :file:`*_map.nii.gz` files), with values transformed to z-scores (:file:`*_Z_*.nii.gz`) and in standard space (:file:`*_to_standard.nii.gz`).

QC Interface
-------------
**Note:** QC pages are currently under development, and their look and functionality will change in future releases.

If you have enabled it in your pipeline configuration, the CPAC Quality Control (QC) interface is an efficient way to rapidly view the outputs of a CPAC run. For each subject, CPAC generates an HTML file containing images of each output and additional information such as motion parameters and signal-to-noise ratios.

.. figure:: /_images/qc_main.png

Though it is possible to view the QC page for each subject individually, we recommend generating a combined QC page that lets you easily navigate between subjects. To do this, open a python terminal and run the following command::

  import CPAC
  CPAC.utils.create_all_qc.run('/path/to/output_directory')

Alternately, it is of course possible to simply view CPAC outputs using the application of your choice. 
