Installing CPAC
----------------

Installation Overview
^^^^^^^^^^^^^^^^^^^^^
This page will guide you through the following steps required to install CPAC:

* Installing the required Python dependencies.
* Installing Nibabel and Nipype.
* Installing AFNI and FSL.
* Downloading and installing required CPAC image resource files.
* Installing FreeSurfer (optional).
* Installing CPAC itself.

It will also provide information on how to:

* Test your installation.
* Upgrade CPAC to a new version.
* Run CPAC without installing.


System Requirements
^^^^^^^^^^^^^^^^^^^
CPAC is **designed to run in a Unix-like environment** such as Linux or Mac OS X, and thus does not support Windows.

Although CPAC should run on most computers made in the past few years, **we highly recommend using a system with multiple cores or multiple processors**, as many of the analyses carried out by CPAC are computationally intensive. As a general rule, CPAC will run on any machine capable of reliably running `AFNI <http://afni.nimh.nih.gov/afni>`_ or `FSL <http://fsl.fmrib.ox.ac.uk/fsl/fslwiki/>`_.

A Note About the Command Line
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
**This User Guide assumes a basic level of experience using the command line.** If you are new to the command line (also known as the terminal), the resources below can help you get started.

* `Getting to Know the Command Line <http://www.davidbaumgold.com/tutorials/command-line/>`_
* Terminals for Aboslute Beginners (`Part 1 <http://glennstovall.com/blog/2012/02/15/terminals-for-absolute-beginners/>`_) (`Part 2 <http://glennstovall.com/blog/2012/03/07/terminals-for-absolute-beginners-part-2/>`_)
* `Learning the Shell <http://linuxcommand.org/lc3_learning_the_shell.php>`_
* `Unix Tutorial for Beginners <http://www.ee.surrey.ac.uk/Teaching/Unix/index.html>`_
* `Unix for the Beginning Mage <http://unixmages.com/>`_


Install Python Dependencies
^^^^^^^^^^^^^^^^^^^^^^^^^^^
Python is the glue (Bloom, 2012) that ties all the pieces of CPAC together. Though many computers come with Python pre-installed, CPAC relies on a number of special-purpose packages. While it is possible to install all of these packages manually, we strongly recommend that you instead use the `Enthought Canopy Environment <https://www.enthought.com/products/canopy/>`_, which includes all of the packages required by CPAC.

**Users must install the 64-bit version of Canopy**, which is `free for academic users <https://www.enthought.com/products/canopy/academic/>`_ (anyone with a .edu email address). CPAC will not run with 32-bit versions.

**Note:** CPAC requires Python 2.7 or greater to run. This is installed as part of Canopy.

For advanced users wishing to undertake a manual installation (or users unable to access a 64-bit version of Canopy), below is a full list of CPAC dependencies. Manually installing these dependencies is an involved process, and is beyond the scope of this guide.

* `SciPy and NumPy <http://www.scipy.org/install.html>`_ (**Mac Users:** Follow `these instructions <http://penandpants.com/2013/04/04/install-scientific-python-on-mac-os-x/>`_.)
* `NetworkX <http://networkx.lanl.gov/>`_ *
* `Traits <https://github.com/enthought/traits>`_ *
* `Matplotlib <http://matplotlib.sourceforge.net/>`_ *
* `wxPython <http://www.wxpython.org/>`_ *
* `PyYAML <http://pyyaml.org/wiki/PyYAML>`_ *
* `iPython <http://ipython.org/>`_ (optional)
* `Graphviz <http://www.graphviz.org/>`_ (optional; required for workflow graphs)

Packages with an asterisk (*) can be installed through `setuptools <https://pythonhosted.org/setuptools/easy_install.html>`_ by running the command ``easy_install package`` (for example, ``easy_install networkx``).

Install Nibabel and Nipype
^^^^^^^^^^^^^^^^^^^^^^^^^^
CPAC relies heavily on tools developed as part of the `Neuroimaging in Python project <http://nipy.sourceforge.net/nipy/stable/index.html>`_. Specifically, `Nipype <http://nipy.sourceforge.net/nipype/>`_ and `Nibabel <http://nipy.sourceforge.net/nibabel/>`_ must be installed for CPAC to run.

To install Nibabel, run the command ``easy_install nibabel``.

To install Nipype, you must first download a custom build from the `FCP-INDI GitHub page <https://github.com/FCP-INDI/nipype/>`_. For a direct download, `click here <https://github.com/FCP-INDI/nipype/archive/master.tar.gz>`_.

Open a terminal window and unpack the file using the following command::

    tar -xzvf filename.tar.gz

Where :file:`filename.tar.gz` is the name of the file you just downloaded.

This will result in a new directory containing Nipype files. Navigate to this directory and run the following command to install Nipype::

    python setup.py install


Install AFNI and FSL
^^^^^^^^^^^^^^^^^^^^
CPAC harnesses the power of two leading neuroimaging software packages (`AFNI <http://afni.nimh.nih.gov/>`_ and `FSL <http://fsl.fmrib.ox.ac.uk/fsl/fslwiki/>`_) to perform key analyses. These packages must be installed before running CPAC. 

For instructions on how to install AFNI, `click here <http://afni.nimh.nih.gov/pub/dist/HOWTO/howto/ht00_inst/html/>`_. Downloading AFNI should take approximately 5 minutes on a standard broadband connection. **Mac Users:** If you are using OS X 10.7 or greater, we recommend doing a `Basic Install <http://afni.nimh.nih.gov/pub/dist/HOWTO/howto/ht00_inst/html/mac_10.78.html>`_.

For instructions on how to install FSL, `click here <http://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FslInstallation>`_. Downloading FSL should take approximately 15 minutes on a standard broadband connection. 


Check FSL and AFNI Paths
""""""""""""""""""""""""
Application paths for AFNI and FSL should have been added to your user profile when they were installed, but it is useful to double-check this before continuing (as the absence of these paths is a common cause of CPAC errors).

If you have not already done so, make sure the paths to FSL and AFNI have been added to your :file:`.bashrc` file. To do this, run the command ``nano ~/.bashrc``. This will open :file:`.bashrc` in the `nano text editor <http://mintaka.sdsu.edu/reu/nano.html>`_. Scroll to the bottom of the file and add the following text::

    # Path to FSL
    FSLDIR=/path/to/fsl
    . ${FSLDIR}/etc/fslconf/fsl.sh
    PATH=${FSLDIR}/bin:${PATH}
    export FSLDIR PATH

    # Path to AFNI
    export PATH=$PATH:/path/to/afni

Where :file:`/path/to/fsl` and :file:`/path/to/afni` are the locations where FSL and AFNI are installed (usually :file:`/usr/local/fsl` for FSL and :file:`~/abin` for AFNI). Save :file:`.bashrc` and exit nano.

**Note to Mac Users:** You must also add these paths to your :file:`.bash_profile` file. This can be done following the same steps outlined above.

If these changes have worked, you should be able to launch FSL and AFNI from the terminal simply by typing :file:`afni` and :file:`fsl`. 

**NOTE:** If you are using a different terminal, such as csh or tcsh, follow the equivalent steps for those platforms.

Download Required Image Resource Files
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
CPAC requires symmetric versions of the MNI152 standard brain template (for use when calculating VMHC), as well as binarized tissue priors (for use during tissue segmentation). These are non-standard files, and are provided in `cpac_resources.tgz <http://fcon_1000.projects.nitrc.org/indi/cpac_resources.tgz>`_.

* Files located in the :file:`symmetric` folder of the downloaded archive should be copied to the :file:`/data/standard` directory of your FSL installation.

* The :file:`2mm` and :file:`3mm` folders located in the :file:`tissuepriors` directory of the downloaded archive should be copied to :file:`/data/standard/tissuepriors` directory of your FSL installation.


Install FreeSurfer (optional, but required for vertex timeseries extraction)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
`FreeSurfer <http://surfer.nmr.mgh.harvard.edu/fswiki/DownloadAndInstall>`_ is a set of automated tools for reconstruction of the brainâ€™s cortical surface from structural MRI data, and overlay of functional MRI data onto the reconstructed surface.

Users wishing to run vertex timeseries extraction must also install the `gradunwarp python package <http://code.google.com/p/gradunwarp/>`_. To do so, run the following command in terminal::

    svn checkout http://gradunwarp.googlecode.com/svn/trunk/ gradunwarp

This will download the latest version of the software and put it in a directory called :file:`gradunwarp`. Navigate into this directory in terminal and run the command::

If you have installed EPD, run the command::
    
    python setup.py install


Install CPAC
^^^^^^^^^^^^^
Congratulations, you are now ready to install CPAC itself!

CPAC is available for download from the `CPAC Homepage <http://fcp-indi.github.com/>`_. Click the button labeled "Download as tar.gz". 

Open a terminal window and unpack the file using the following command::

    tar -xzvf filename.tar.gz

Where :file:`filename.tar.gz` is the name of the file you just downloaded.

This will result in a new directory containing CPAC. Navigate into this directory in terminal and type::

    python setup.py install

CPAC will be installed along side other python packages, and should now be ready to run. If you wish, you may now safely delete the setup files downloaded during the install process.

Test Your Installation
^^^^^^^^^^^^^^^^^^^^^^
In a new terminal window, open iPython by typing :file:`ipython`, and enter :file:`import CPAC`. If installation was successful, this will execute without an error. If you encounter an error, try repeating the CPAC install command above, or see the :doc:`help page </help>`.

Upgrading CPAC
^^^^^^^^^^^^^^^
CPAC constantly being improved, and it is important that users upgrade to new versions when they are relased (approximately every week). After downloading the latest version from the `CPAC Homepage <http://fcp-indi.github.com/>`_, simply repeat the instructions listed in the "Install CPAC" section above.

Running CPAC Without Installing
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Advanced users wishing to use CPAC without installing can do so in two ways:

* Add the location of the CPAC files to your Python path.
* Run Python or iPython from within the CPAC directory.

References
^^^^^^^^^^
Bloom, J. `Python as Super Glue for the Modern Scientific Workflow <http://www.youtube.com/watch?v=mLuIB8aW2KA>`_, video of a talk given at the SciPy2012 conference.
