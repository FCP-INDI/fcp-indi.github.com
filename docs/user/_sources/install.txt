Installing C-PAC
----------------

Installation Overview
^^^^^^^^^^^^^^^^^^^^^
This page will guide you through the following steps required to install C-PAC:

* Installing the required Python dependencies.
* Installing Nipype and Nibabel.
* Installing AFNI and FSL.
* Downloading required resource files.
* Installing FreeSurfer (optional).
* Installing C-PAC.

It will also provide information on how to:

* Test your installation.
* Upgrade C-PAC.
* Run C-PAC without installing.

System Requirements
^^^^^^^^^^^^^^^^^^^
C-PAC is **designed to run in a Unix-like environment** such as Linux or Mac OS X, and thus does not support Windows.

Although C-PAC should run on most computers made in the past few years, **we highly recommend using a system with multiple cores or multiple processors**, as many of the analyses carried out by C-PAC are computationally intensive. As a general rule, C-PAC will run on any machine capable of reliably running `AFNI <http://afni.nimh.nih.gov/afni>`_ or `FSL <http://fsl.fmrib.ox.ac.uk/fsl/fslwiki/>`_.

A Note About the Command Line
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
**This User Guide assumes a basic level of experience using the command line.** If you are new to the command line (also known as the terminal), the resources below should provide a solid introduction.

* `Getting to Know the Command Line <http://www.davidbaumgold.com/tutorials/command-line/>`_
* `Survival Guide for Unix Newbies <http://matt.might.net/articles/basic-unix/>`_
* `A Command Line Primer for Beginners <http://lifehacker.com/5633909/who-needs-a-mouse-learn-to-use-the-command-line-for-almost-anything>`_
* `Terminal for Beginners <http://ubuntuforums.org/showthread.php?t=935645>`_
* `Terminals for Aboslute Beginners <http://glennstovall.com/blog/2012/10/30/terminals-for-absolute-beginners-part-3/>`_
* `Unix for the Beginning Mage <http://unixmages.com/>`_

Install Python Dependencies
^^^^^^^^^^^^^^^^^^^^^^^^^^^
Python is the glue (Bloom, 2012) that ties all the pieces of C-PAC together. Though many computers come with Python pre-installed, C-PAC relies on a number of special-purpose packages. While it is possible to install all of these packages manually, we strongly recommend that you instead use the `Enthought Python Distribution (EPD) <http://www.enthought.com/products/epd.php>`_. **Users must install the 64-bit version of EPD** (free on Linux, requires an EDU or paid license on other platforms), as C-PAC will not run with 32-bit versions.

**Note:** C-PAC requires Python 2.7 or greater to run. This is installed as part of EPD.

.. line-block::
    **If you have a .edu email address:**
    Enthought provides the full version of EPD `at no cost to academic users <http://www.enthought.com/products/edudownload.php>`_. This includes all of the packages required by C-PAC.

    **If you do not have an .edu email address:**
    Many of the required packages are included in `EPD Free <http://www.enthought.com/products/epd_free.php>`_, though users must still manually install `Setuptools <http://pypi.python.org/pypi/setuptools>`_ and `NetworkX <http://networkx.github.com/documentation/latest/install.html>`_.

For advanced users wishing to undertake a manual installation, below is a full list of C-PAC dependencies. Manually installing these dependencies is an involved process, and is beyond the scope of this guide.

* `SciPy and NumPy <http://www.scipy.org/Download>`_
* `NetworkX <http://networkx.lanl.gov/>`_
* `Traits <https://github.com/enthought/traits>`_
* `iPython <http://ipython.org/>`_
* `Matplotlib <http://matplotlib.sourceforge.net/>`_

Additionally, users may optionally install `Graphviz <http://www.graphviz.org/>`_ to enable aut-generation of workflow graphs.

Install Nipype and Nibabel
^^^^^^^^^^^^^^^^^^^^^^^^^^
C-PAC relies heavily on tools developed as part of the `Neuroimaging in Python (NiPy) <http://nipy.sourceforge.net/nipy/stable/faq/why.html>`_ project. Specifically, Nipype and Nibabel must be installed for C-PAC to run.

To install Nibabel, run the following command in terminal::

    easy_install nibabel

C-PAC requires a custom version of Nipype, which which is available on the `FCP-INDI Github page <https://github.com/FCP-INDI/nipype/>`_. For a direct download, `click here <https://github.com/FCP-INDI/nipype/archive/master.tar.gz>`_. 

Open a terminal window and unpack the file using the following command::

    tar -xzvf filename.tar.gz

Where :file:`filename.tar.gz` is the name of the file you just downloaded.

This will result in a new directory containing Nipype files. Navigate into this directory in terminal and type::

    python setup.py install


Install AFNI and FSL
^^^^^^^^^^^^^^^^^^^^
C-PAC harnesses the power of two leading neuroimaging software packages to perform key analyses: 

* `AFNI <http://afni.nimh.nih.gov/pub/dist/HOWTO/howto/ht00_inst/html/index.shtml>`_  (which stands for Analysis of Functional NeuroImages) is a set of programs for processing, analyzing and displaying fMRI data. **If you are using Mac OS X 10.7 or greater**, follow `these instructions <http://afni.nimh.nih.gov/afni/community/board/read.php?1,112669,112675#msg-112675>`_. Downloading AFNI should take approximately 5 minutes on a standard broadband connection.

* `FSL <http://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FslInstallation>`_ (which stands for FMRIB Software Library) is a comprehensive library of analysis tools for FMRI, MRI, and DTI brain imaging data. Downloading FSL should take approximately 15 minutes on a standard broadband connection.

Editing .bashrc
^^^^^^^^^^^^^^^
If you have not already done so, make sure the paths to FSL and AFNI have been added to your :file:`.bashrc` file. To do this, open a new terminal window and run::

    nano ~/.bashrc

This will open :file:`.bashrc` in the nano text editor. Scroll to the bottom of the file and add the following text::

    # Path to FSL
    FSLDIR=/path/to/fsl
    . ${FSLDIR}/etc/fslconf/fsl.sh
    PATH=${FSLDIR}/bin:${PATH}
    export FSLDIR PATH

    # Path to AFNI
    export PATH=$PATH:/path/to/afni

Where :file:`/path/to/fsl` and :file:`/path/to/afni` are the locations where FSL and AFNI are installed (usually :file:`/usr/local/fsl` for FSL and :file:`~/abin` for AFNI). Save :file:`.bashrc` and exit nano.

**Note to Mac Users:** You must also add these paths to your :file:`.bash_profile` file. This can be done following the same steps outlined above.

If these changes have worked, you should be able to launch FSL and AFNI from the terminal simply by typing :file:`afni` and :file:`fsl`. 

**NOTE:** If you are using a different terminal, such as csh or tcsh, follow the equivalent steps for those platforms.

Download Required Image Resource Files
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C-PAC requires symmetric versions of the MNI152 standard brain template, as well as binarized tissue priors. These are non-standard files, and are provided in `cpac_resources.tgz <http://fcon_1000.projects.nitrc.org/indi/cpac_resources.tgz>`_.

* Files located in the :file:`symmetric` folder of the downloaded archive should be copied to the :file:`/data/standard` directory of your FSL installation.

* The :file:`2mm` and :file:`3mm` folders located in the :file:`tissuepriors` directory of the downloaded archive should be copied to :file:`/data/standard/tissuepriors` directory of your FSL installation.


Install FreeSurfer (optional, but required for vertex timeseries extraction)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
`FreeSurfer <http://surfer.nmr.mgh.harvard.edu/fswiki/DownloadAndInstall>`_ is a set of automated tools for reconstruction of the brainâ€™s cortical surface from structural MRI data, and overlay of functional MRI data onto the reconstructed surface.

Users wishing to run vertex timeseries extraction must also install the `gradunwarp python package <http://code.google.com/p/gradunwarp/>`_. To do so, run the following command in terminal::

    svn checkout http://gradunwarp.googlecode.com/svn/trunk/ gradunwarp

This will download the latest version of the software and put it in a directory called :file:`gradunwarp`. Navigate into this directory in terminal and run the command::

If you have installed EPD, run the command::
    
    python setup.py install


Install C-PAC
^^^^^^^^^^^^^
Congratulations, you are now ready to install C-PAC itself!

C-PAC is available for download from the `C-PAC Homepage <http://fcp-indi.github.com/>`_. Click the button labeled "Download as tar.gz". 

Open a terminal window and unpack the file using the following command::

    tar -xzvf filename.tar.gz

Where :file:`filename.tar.gz` is the name of the file you just downloaded.

This will result in a new directory containing C-PAC. Navigate into this directory in terminal and type::

    python setup.py install

C-PAC will be installed along side other python packages, and should now be ready to run. If you wish, you may now safely delete the setup files downloaded during the install process.

Test Your Installation
^^^^^^^^^^^^^^^^^^^^^^
In a new terminal window, open iPython by typing :file:`ipython`, and enter :file:`import CPAC`. If installation was successful, this will execute without an error. If you encounter an error, try repeating the C-PAC install command above, or see the :doc:`help page </help>`.

Upgrading C-PAC
^^^^^^^^^^^^^^^
C-PAC constantly being improved, and it is important that users upgrade to new versions when they are relased (approximately every week). After downloading the latest version from the `C-PAC Homepage <http://fcp-indi.github.com/>`_, simply repeat the instructions listed in the "Install C-PAC" section above.

Running C-PAC Without Installing
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Advanced users wishing to use C-PAC without installing can do so in two ways:

* Add the location of the C-PAC files to your Python path.
* Run Python or iPython from within the C-PAC directory.

References
^^^^^^^^^^
Bloom, J. `Python as Super Glue for the Modern Scientific Workflow <http://www.youtube.com/watch?v=mLuIB8aW2KA>`_, video of a talk given at the SciPy2012 conference.
