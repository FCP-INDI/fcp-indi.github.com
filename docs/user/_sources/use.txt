Using C-PAC
===========
Overview
--------
This page will guide you through the process of:

* Readying your data for use by C-PAC by configuring :file:`data_config.py` and running the :file:`extract_data` script. This includes generating subject lists and defining which data will be run.
* Configuring :doc:`Slice Timing Correction </slice>` by providing a :file:`scan_parameters.csv` file.
* Specifying which preprocessing and analysis to run, and which what settings, as well as configuring C-PAC to run on your computer by editing :file:`config.py`.
* Running individual-level analysis.
* Running group-level analysis.

.. figure:: /images/run_workflow.png

Ready Your Data
---------------
Before running C-PAC, you must generate a list of subjects and data to process.This is done by defining file structure templates in :file:`data_config.py` and running the :file:`extract_data` script. For detailed instructions on how to do this, as well as how to configure :doc:`Slice Timing Correction </slice>`, please see the :doc:`Ready Your Data page</data_config>`.

Configure C-PAC
---------------
The :file:`config.py` file is where you will specify which processing and analyses to run, and with which settings. This file is located in the :file:`/configs` directory of your installation, or can be `downloaded here <https://raw.github.com/FCP-INDI/C-PAC/master/configs/config.py>`_. 

For detailed instructions on how to configure a particular C-PAC function, see the following pages: 

* :doc:`Computer Settings </compute_config>`
* :doc:`Resource Directory Setup </dir_config>`
* :doc:`Anatomical Preprocessing </anat>`
* :doc:`Slice Timing Correction </slice>`
* :doc:`Motion Correction </motion>`
* :doc:`Nuisance Corrections </nuisance_config>`
* :doc:`Temporal Filtering </temporal>`
* :doc:`Time Series Extraction </tse>`
* :doc:`Seed-based Correlation </sca>`
* :doc:`Regional Homogeneity </reho>`
* :doc:`Voxel-mirrored Homotopic Connectivity </vmhc>`
* :doc:`ALFF and fALFF </alff>`
* :doc:`Network Centrality </centrality>`
* :doc:`Bootstrap Analysis of Stable Clusters </basc>`
* :doc:`Connectome-wide Association Studies </cwas>`
* :doc:`Group Statistics </fsl_ga>`
* :doc:`Smoothing </smoothing>`

**NOTE:** If this is your first time using C-PAC, we strongly recommend that you go through the entire :file:`config.py` file at least once. The default settings will not work for everyone, and it's a good idea to consider the available options before running.

Running Preprocessing and Individual-Level Analysis
---------------------------------------------------
Open iPython by typing :file:`ipython`. From the iPython prompt, run::

  import CPAC
  CPAC.pipeline.cpac_runner.run ('/path/to/config.py', '/path/to/CPAC_subjectlist.py')

The following schematic illustrates the order in which C-PAC executes.

.. figure:: /images/processing_workflow.png

For information on the files produced by C-PAC, see the :doc:`Outputs </outputs>` page.

Running BASC, CWAS, and Group Statistics
----------------------------------------

* For BASC and CWAS, C-PAC must first be run to transform functional images to MNI space.
* In order to run group statistics, you must first run C-PAC to generate the desired measures for which you wish to calculate group differences.


Open iPython by typing :file:`ipython`. From the iPython prompt, run::

  import CPAC
  CPAC.pipeline.cpac_group_runner.run ('/path/to/config.py', '/path/to/desired/strategy')


.. toctree::
   :hidden: 

   Ready Your Data <data_config>
   Computer Settings <compute_config>
   Directory Setup <dir_config>
   Data Ouptut <output>