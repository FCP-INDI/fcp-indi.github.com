Using C-PAC
===========
Overview
--------
This page will guide you through the process of:

* Readying your data for use by C-PAC by configuring :file:`data_config.yml` and running the :file:`extract_data` script. This includes generating subject lists and defining which data will be run.
* Configuring :doc:`Slice Timing Correction </slice>` by providing a :file:`scan_parameters.csv` file.
* Specifying which preprocessing and analysis to run, and which what settings, as well as configuring C-PAC to run on your computer by editing :file:`config.yml`.
* Running individual-level analysis.
* Running group-level analysis.

.. figure:: /images/run_workflow.png

Ready Your Data
---------------
Before running C-PAC, you must generate a list of subjects and data to process.This is done by defining file structure templates in :file:`data_config.yml` and running the :file:`extract_data` script. For detailed instructions on how to do this, as well as how to configure :doc:`Slice Timing Correction </slice>`, please see the :doc:`Ready Your Data page</data_config>`.

Configure C-PAC
---------------
The :file:`config.yml` file is where you will specify which processing and analyses to run, and with which settings. This file is located in the :file:`/configs` directory of your installation, or can be `downloaded here <https://raw.github.com/FCP-INDI/C-PAC/master/configs/config.py>`_. 

For detailed instructions on how to configure a particular C-PAC function, see the following pages: 

* :doc:`Computer Settings </compute_config>`
* :doc:`Resource Directory Setup </dir_config>`
* :doc:`Anatomical Preprocessing </anat>`
* :doc:`Slice Timing Correction </slice>`
* :doc:`Motion Correction </motion>`
* :doc:`Nuisance Corrections </nuisance_config>`
* :doc:`Temporal Filtering </temporal>`
* :doc:`Time Series Extraction </tse>`
* :doc:`Seed-based Correlation </sca>`
* :doc:`Regional Homogeneity </reho>`
* :doc:`Voxel-mirrored Homotopic Connectivity </vmhc>`
* :doc:`ALFF and fALFF </alff>`
* :doc:`Network Centrality </centrality>`
* :doc:`Bootstrap Analysis of Stable Clusters </basc>`
* :doc:`Connectome-wide Association Studies </cwas>`
* :doc:`Group Statistics </fsl_ga>`
* :doc:`Smoothing </smoothing>`

**NOTE:** If this is your first time using C-PAC, we strongly recommend that you go through the entire :file:`config.yml` file at least once. The default settings will not work for everyone, and it's a good idea to consider the available options before running.

Running Preprocessing and Individual-Level Analysis
---------------------------------------------------
Open iPython by typing :file:`ipython`. From the iPython prompt, run::

  import CPAC
  CPAC.pipeline.cpac_runner.run ('/path/to/config.py', '/path/to/CPAC_subjectlist.py')

The following schematic illustrates the order in which C-PAC executes.

.. figure:: /images/processing_workflow.png

For information on the files produced by C-PAC, see the :doc:`Outputs </outputs>` page.

Running BASC, CWAS, and Group Statistics
----------------------------------------
BASC, CWAS, and Group Statistics are run separately from preprocessing and individual-level analysis. As such, **you must run preprocessing and individual-level analysis before running group-level analyses.**

As C-PAC allows you to specify multiple processing pipelines for preprocessing and individual-level analysis, a single run can result in multiple output files calculated with slightly different settings. **When running group-level analyses, you must specify which preprocessed files and individual-level measures you would like to include.** This is done by specifying the location of path files. 

Path files are located for each subject in a :file:`/output_directory/pipeline_name/subject/path_files_here` directory. Each path file specifies the location of the processed files for each subject. As multiple processing strategies can be used, there are multiple path files.

.. figure:: /images/path_files.png

The name of each path file describes the preprocessing strategy used, as well as any temporal filtering or smoothing applied.

To run group-level analysis, open iPython by typing :file:`ipython`. From the iPython prompt, run::

  import CPAC
  CPAC.pipeline.cpac_group_runner.run ('/path/to/config.py', '/path/to/desired/path_files')

Where :file:`/path/to/desired/path_files` contains the path files for files on which you wish to run your analysis. Because path files are located within each subject, the location of the subject folder should be replaced with an asterisk when specifying the location of these files. For example:: 
    
    `/home/data/output/pipeline_name/subject_01/path_files_here/paths_file_scan_func_rest__compcor_ncomponents_5_linear1.motion1.compcor1.CSF_0.98_GM_0.7_WM_0.98____.txt

Would become::

    `/home/data/output/pipeline_name/*/path_files_here/paths_file_scan_func_rest__compcor_ncomponents_5_linear1.motion1.compcor1.CSF_0.98_GM_0.7_WM_0.98____.txt

It is possible to run all path files by replacing the name of the path file with an asterisk.
 
.. toctree::
   :hidden: 

   Ready Your Data <data_config>
   Computer Settings <compute_config>
   Directory Setup <dir_config>
   Data Ouptut <output>